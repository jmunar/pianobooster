
version = "0.1";

app:
{
    quickstart     = false;
    // Specifies the minimum number of video frames that
    // are displayed before a buffer swap occurs
    swapinterval   = -1;
    // Time in msec before everything goes quiet
    silencetimeout = 8000;
    // Time in msec to trigger events in the OpenGL controller
    tickrate       = 4;
};

log:
{
    level    = 1;
    usefile  = false;
    file     = "pb.log";
    mididump = false;
};

play:
{
    channelkbdlights = -1;
    // all notes in a cord must be spaced less than this a gap
    chord_mingap     = 10;
    // the max time between the start and end of a cord
    chord_maxlength  = 20;
}

style:
{
    marker_bar_color     = (0.3, 0.25, 0.25);
    marker_beat_color    = (0.25, 0.2, 0.2);
    // Space from the beginning of the stave to the clef
    marker_clef2stave    = 20;
    // Space from the clef to the time signature
    marker_timesign2clef = 25;
    // Space from the time signature to the key
    marker_key2timesign  = 25;
    // Space from the key to the beginning of the scroll
    marker_scroll2key    = 64;
    
    note_color           = (0.1, 0.9, 0.1);
    note_colordim        = (0.25, 0.45, 0.25);
    note_good_color      = (0.5, 0.6, 1.0);
    note_bad_color       = (0.8, 0.3, 0.8);
    note_unplayed_color  = (1.0, 0.8, 0.0);
    note_name_color      = (1.0, 1.0, 1.0);
    
    piano_good_color     = (0.5, 0.6, 1.0);
    piano_bad_color      = (1.0, 0.0, 0.0);
    
    stave_color          = (0.1, 0.7, 0.1);
    stave_colordim       = (0.15, 0.40, 0.15);
    // Geometry of the stave with respect to the drawing area
    stave_gap_left       = 20;
    stave_gap_right      = 20;
    stave_thickness      = 1.0;
    
    // Background color of the playing area
    playarea_bg_color    = (0.0, 0.0, 0.0);
    
    // Width of the playing rectangle before the note
    playrect_wprev       = 25;
    // Width of the playing rectangle after the note
    playrect_wpast       = 25;
    // Position of the play zone, as a fraction of the free stave length
    playrect_relx        = 0.4;
    
}
